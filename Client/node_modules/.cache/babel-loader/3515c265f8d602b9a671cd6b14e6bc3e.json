{"ast":null,"code":"import { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, predominant, predominantGradient } from \"../../qualifiers/background.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\n\nfunction createBlurredBackground(backgroundModel) {\n  const {\n    brightness,\n    intensity\n  } = backgroundModel;\n  const result = Background.blurred();\n\n  if (brightness || brightness == 0) {\n    result.brightness(brightness);\n  }\n\n  if (intensity || intensity == 0) {\n    result.intensity(intensity);\n  }\n\n  return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\n\n\nfunction createGradientBackground(background, backgroundModel) {\n  const {\n    gradientColors,\n    gradientDirection,\n    contrast,\n    palette\n  } = backgroundModel;\n\n  if (contrast) {\n    background.contrast();\n  }\n\n  if (palette) {\n    background.palette(...palette);\n  }\n\n  if (gradientColors) {\n    background.gradientColors(+gradientColors);\n  }\n\n  if (gradientDirection) {\n    background.gradientDirection(gradientDirection);\n  }\n\n  return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\n\n\nfunction createContrastPaletteBackground(background, backgroundModel) {\n  const {\n    contrast,\n    palette\n  } = backgroundModel;\n\n  if (contrast) {\n    background.contrast();\n  }\n\n  if (palette) {\n    background.palette(...palette);\n  }\n\n  return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\n\n\nfunction createBackgroundFromModel(backgroundModel) {\n  const {\n    backgroundType\n  } = backgroundModel;\n\n  switch (backgroundType) {\n    case 'auto':\n      return auto();\n\n    case 'blurred':\n      return createBlurredBackground(backgroundModel);\n\n    case 'border':\n      return createContrastPaletteBackground(border(), backgroundModel);\n\n    case 'borderGradient':\n      return createGradientBackground(borderGradient(), backgroundModel);\n\n    case 'predominant':\n      return createContrastPaletteBackground(predominant(), backgroundModel);\n\n    case 'predominantGradient':\n      return createGradientBackground(predominantGradient(), backgroundModel);\n\n    default:\n      return color(backgroundModel.color);\n  }\n}\n\nexport { createBackgroundFromModel };","map":{"version":3,"names":["Background","auto","border","borderGradient","color","predominant","predominantGradient","createBlurredBackground","backgroundModel","brightness","intensity","result","blurred","createGradientBackground","background","gradientColors","gradientDirection","contrast","palette","createContrastPaletteBackground","createBackgroundFromModel","backgroundType"],"sources":["/Users/noahgaston/Desktop/Preppers/Client/node_modules/@cloudinary/url-gen/internal/models/createBackgroundFromModel.js"],"sourcesContent":["import { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, predominant, predominantGradient } from \"../../qualifiers/background.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\nfunction createBlurredBackground(backgroundModel) {\n    const { brightness, intensity } = backgroundModel;\n    const result = Background.blurred();\n    if (brightness || brightness == 0) {\n        result.brightness(brightness);\n    }\n    if (intensity || intensity == 0) {\n        result.intensity(intensity);\n    }\n    return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\nfunction createGradientBackground(background, backgroundModel) {\n    const { gradientColors, gradientDirection, contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    if (gradientColors) {\n        background.gradientColors(+gradientColors);\n    }\n    if (gradientDirection) {\n        background.gradientDirection(gradientDirection);\n    }\n    return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\nfunction createContrastPaletteBackground(background, backgroundModel) {\n    const { contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\nfunction createBackgroundFromModel(backgroundModel) {\n    const { backgroundType } = backgroundModel;\n    switch (backgroundType) {\n        case 'auto':\n            return auto();\n        case 'blurred':\n            return createBlurredBackground(backgroundModel);\n        case 'border':\n            return createContrastPaletteBackground(border(), backgroundModel);\n        case 'borderGradient':\n            return createGradientBackground(borderGradient(), backgroundModel);\n        case 'predominant':\n            return createContrastPaletteBackground(predominant(), backgroundModel);\n        case 'predominantGradient':\n            return createGradientBackground(predominantGradient(), backgroundModel);\n        default:\n            return color(backgroundModel.color);\n    }\n}\nexport { createBackgroundFromModel };\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,cAAvB,EAAuCC,KAAvC,EAA8CC,WAA9C,EAA2DC,mBAA3D,QAAsF,gCAAtF;AACA;AACA;AACA;AACA;;AACA,SAASC,uBAAT,CAAiCC,eAAjC,EAAkD;EAC9C,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA4BF,eAAlC;EACA,MAAMG,MAAM,GAAGX,UAAU,CAACY,OAAX,EAAf;;EACA,IAAIH,UAAU,IAAIA,UAAU,IAAI,CAAhC,EAAmC;IAC/BE,MAAM,CAACF,UAAP,CAAkBA,UAAlB;EACH;;EACD,IAAIC,SAAS,IAAIA,SAAS,IAAI,CAA9B,EAAiC;IAC7BC,MAAM,CAACD,SAAP,CAAiBA,SAAjB;EACH;;EACD,OAAOC,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASE,wBAAT,CAAkCC,UAAlC,EAA8CN,eAA9C,EAA+D;EAC3D,MAAM;IAAEO,cAAF;IAAkBC,iBAAlB;IAAqCC,QAArC;IAA+CC;EAA/C,IAA2DV,eAAjE;;EACA,IAAIS,QAAJ,EAAc;IACVH,UAAU,CAACG,QAAX;EACH;;EACD,IAAIC,OAAJ,EAAa;IACTJ,UAAU,CAACI,OAAX,CAAmB,GAAGA,OAAtB;EACH;;EACD,IAAIH,cAAJ,EAAoB;IAChBD,UAAU,CAACC,cAAX,CAA0B,CAACA,cAA3B;EACH;;EACD,IAAIC,iBAAJ,EAAuB;IACnBF,UAAU,CAACE,iBAAX,CAA6BA,iBAA7B;EACH;;EACD,OAAOF,UAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASK,+BAAT,CAAyCL,UAAzC,EAAqDN,eAArD,EAAsE;EAClE,MAAM;IAAES,QAAF;IAAYC;EAAZ,IAAwBV,eAA9B;;EACA,IAAIS,QAAJ,EAAc;IACVH,UAAU,CAACG,QAAX;EACH;;EACD,IAAIC,OAAJ,EAAa;IACTJ,UAAU,CAACI,OAAX,CAAmB,GAAGA,OAAtB;EACH;;EACD,OAAOJ,UAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASM,yBAAT,CAAmCZ,eAAnC,EAAoD;EAChD,MAAM;IAAEa;EAAF,IAAqBb,eAA3B;;EACA,QAAQa,cAAR;IACI,KAAK,MAAL;MACI,OAAOpB,IAAI,EAAX;;IACJ,KAAK,SAAL;MACI,OAAOM,uBAAuB,CAACC,eAAD,CAA9B;;IACJ,KAAK,QAAL;MACI,OAAOW,+BAA+B,CAACjB,MAAM,EAAP,EAAWM,eAAX,CAAtC;;IACJ,KAAK,gBAAL;MACI,OAAOK,wBAAwB,CAACV,cAAc,EAAf,EAAmBK,eAAnB,CAA/B;;IACJ,KAAK,aAAL;MACI,OAAOW,+BAA+B,CAACd,WAAW,EAAZ,EAAgBG,eAAhB,CAAtC;;IACJ,KAAK,qBAAL;MACI,OAAOK,wBAAwB,CAACP,mBAAmB,EAApB,EAAwBE,eAAxB,CAA/B;;IACJ;MACI,OAAOJ,KAAK,CAACI,eAAe,CAACJ,KAAjB,CAAZ;EAdR;AAgBH;;AACD,SAASgB,yBAAT"},"metadata":{},"sourceType":"module"}